<TeleprompterWidget>:
    id: main

    LoadingScreenLayout:
        loading_screen_text: 'Loading ...'
        id: loading_screen
        opacity: 1 if main.mode == 'loading' else 0
        Label:
            font_size: 20
            text: loading_screen.loading_screen_text
    
    HomeLayout:
        id: home_layout
        orientation: 'vertical'

        opacity: 1 if main.mode == 'home' else 0
    
    SongbookLayoutMain:
        orientation: 'vertical'
        opacity: 1 if main.mode == 'songbook' else 0

        BoxLayout:
            size_hint: 1, 0.05
            BackButton:
                id: back_button

        SongList:
            id: song_list
            orientation: 'lr-tb'
            spacing: 10
            padding: 10


    PromptLayout:
        id: prompt_layout
        opacity: 1 if main.mode == 'prompt' else 0
        orientation: 'vertical'
        width: self.parent.width

        PrompterTopBar:
            size_hint: 1, app.TOP_BAR_TO_IMAGE_RATIO
            Label:
                size_hint: 1, None
                font_size: self.width * app.TOP_BAR_TO_IMAGE_RATIO
                text_size: self.width, None
                height: self.texture_size[1]
                shorten: True

                halign: 'left'
                text: "  " + prompt_layout.current_song.artist + ' - ' + prompt_layout.current_song.song if prompt_layout.current_song else ""

            Label:
                size_hint: 1, None
                font_size: self.width * app.TOP_BAR_TO_IMAGE_RATIO
                text_size: self.width, None
                height: self.texture_size[1]
                shorten: True
                
                halign: 'right'
                text: 'Page ' + str(prompt_layout.current_image_number + 1) + '/' + str(prompt_layout.number_of_slides) + ' Song ' + str(prompt_layout.current_song.index + 1) + '/' + str(len(prompt_layout.all_songs) - prompt_layout.placeholders_num) + "  " if prompt_layout.current_song else ""

        Image:
            id: current_image
            source: prompt_layout.current_image_source

        PrompterBottomBar:
            size_hint: 1, app.BOTTOM_BAR_TO_IMAGE_RATIO

            Label:
                size_hint: 1, None
                font_size: self.width * app.BOTTOM_BAR_TO_IMAGE_RATIO / 2
                text_size: self.width, None
                height: self.texture_size[1]

                halign: 'center'
                text: 'Next: ' + prompt_layout.next_song.artist + ' - ' + prompt_layout.next_song.song if prompt_layout.next_song else ""


<BackButton>:
    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    Label:
        text: "Back"

        halign: 'center'
        font_size: self.width /60
        text_size: self.width, None
        height: self.texture_size[1]


<Song>:
    opacity: 0 if self.is_placeholder is True else 1
    padding: 10
    orientation: 'vertical'
    id: song

    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    SequenceLabel:
        text: song.sequence or ""

        halign: 'center'
        size_hint: 1, 0.2
        font_size: self.width/10
        text_size: self.width, None
        height: self.texture_size[1]
    
    ArtistLabel:
        text: song.artist or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/5
        text_size: self.width, None
        height: self.texture_size[1]
    
    SongLabel:
        text: song.song or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/5
        text_size: self.width, None
        height: self.texture_size[1]


<Songbook>:
    id: songbook
    padding: 10
    orientation: 'vertical'

    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    SequenceLabel:
        text: songbook.sequence or ""

        halign: 'center'
        size_hint: 1, 0.2
        font_size: self.width/20
        text_size: self.width, None
        height: self.texture_size[1]

    Label:
        text: songbook.title or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/10
        text_size: self.width, None
        height: self.texture_size[1]
        shorten: True
