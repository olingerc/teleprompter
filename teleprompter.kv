<TeleprompterWidget>:
    id: main

    LoadingScreenLayout:
        ls_text: 'Loading ...'
        id: ls_screen
        opacity: 1 if main.mode == 'loading' else 0
        Label:
            id: ls-label
            font_size: 50
            text: ls_screen.ls_text
    
    HomeLayout:
        id: home_layout
        orientation: 'vertical'

        opacity: 1 if main.mode == 'home' else 0
    
    SongbookLayoutMain:
        orientation: 'vertical'
        opacity: 1 if main.mode == 'songbook' else 0

        BoxLayout:
            size_hint: 1, 0.05
            BackButton:
                id: back_button


        SongbookLayoutList:
            id: songbook_layout
            orientation: 'lr-tb'
            cols: app.SONGBOOK_MIN_COLS_NUM
            rows: app.SONGBOOK_MIN_ROWS_NUM
            spacing: 10
            padding: 10


    
    PromptLayout:
        id: prompt_layout
        opacity: 1 if main.mode == 'prompt' else 0
        orientation: 'vertical'
        width: self.parent.width

        PrompterTopBar:
            size_hint: 1, None

            Label:
                size_hint: 1, None
                text_size: self.width, None
                font_size: self.height * 0.75
                halign: 'left'
                padding: self.height * 0.25
                text: prompt_layout.current_card.artist + ' - ' + prompt_layout.current_card.song if prompt_layout.current_card else ""


            Label:
                size_hint: 1, None
                text_size: self.width, None
                font_size: self.height * 0.75
                halign: 'right'
                padding: self.height * 0.25
                text: 'Page ' + str(prompt_layout.current_image_number + 1) + '/' + str(prompt_layout.number_of_slides) + ' Song ' + str(prompt_layout.current_card.index + 1) + '/' + str(len(prompt_layout.all_cards) - prompt_layout.placeholders_num) if prompt_layout.current_card else ""

        Image:
            id: current_image
            source: prompt_layout.current_image_source

        PrompterBottomBar:
            size_hint: 1, None
            Label:
                size_hint: 1, None
                font_size: self.height * 0.75
                text: 'Next: ' + prompt_layout.next_card.artist + ' - ' + prompt_layout.next_card.song if prompt_layout.next_card else ""


<BackButton>:
    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    Label:
        text: "Back"

        halign: 'center'
        font_size: self.width /60
        text_size: self.width, None
        height: self.texture_size[1]


<SongCard>:
    opacity: 0 if self.is_placeholder is True else 1
    padding: 10
    orientation: 'vertical'
    id: song_card

    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    SequenceLabel:
        text: song_card.sequence or ""

        halign: 'center'
        size_hint: 1, 0.2
        font_size: self.width/20
        text_size: self.width, None
        height: self.texture_size[1]
    ArtistLabel:
        text: song_card.artist or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/10
        text_size: self.width, None
        height: self.texture_size[1]
    SongLabel:
        text: song_card.song or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/10
        text_size: self.width, None
        height: self.texture_size[1]


<Songbook>:
    #opacity: 0 if self.is_placeholder is True else 1
    padding: 10
    orientation: 'vertical'
    id: songbook

    canvas:

        # Draw border
        Color:
            rgb: (0.8, 0.8, 0.8) if self.focus else (0.2, 0.2, 0.2)
        RoundedRectangle:
            pos: self.pos
            size: self.size
        
        # Draw content
        Color:
            rgba: (0.2, 0.2, 0.2, 1)
        RoundedRectangle:
            pos: self.x+5, self.y+5
            size: self.width-10, self.height-10

    SequenceLabel:
        text: songbook.sequence or ""

        halign: 'center'
        size_hint: 1, 0.2
        font_size: self.width/20
        text_size: self.width, None
        height: self.texture_size[1]
    Label:
        text: songbook.title or ""
        
        halign: 'center'
        size_hint: 1, 0.4
        font_size: self.width/10
        text_size: self.width, None
        height: self.texture_size[1]
